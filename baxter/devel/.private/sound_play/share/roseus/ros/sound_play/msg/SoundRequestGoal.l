;; Auto-generated. Do not edit!


(when (boundp 'sound_play::SoundRequestGoal)
  (if (not (find-package "SOUND_PLAY"))
    (make-package "SOUND_PLAY"))
  (shadow 'SoundRequestGoal (find-package "SOUND_PLAY")))
(unless (find-package "SOUND_PLAY::SOUNDREQUESTGOAL")
  (make-package "SOUND_PLAY::SOUNDREQUESTGOAL"))

(in-package "ROS")
;;//! \htmlinclude SoundRequestGoal.msg.html


(defclass sound_play::SoundRequestGoal
  :super ros::object
  :slots (_sound_request ))

(defmethod sound_play::SoundRequestGoal
  (:init
   (&key
    ((:sound_request __sound_request) (instance sound_play::SoundRequest :init))
    )
   (send-super :init)
   (setq _sound_request __sound_request)
   self)
  (:sound_request
   (&rest __sound_request)
   (if (keywordp (car __sound_request))
       (send* _sound_request __sound_request)
     (progn
       (if __sound_request (setq _sound_request (car __sound_request)))
       _sound_request)))
  (:serialization-length
   ()
   (+
    ;; sound_play/SoundRequest _sound_request
    (send _sound_request :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; sound_play/SoundRequest _sound_request
       (send _sound_request :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; sound_play/SoundRequest _sound_request
     (send _sound_request :deserialize buf ptr-) (incf ptr- (send _sound_request :serialization-length))
   ;;
   self)
  )

(setf (get sound_play::SoundRequestGoal :md5sum-) "3bd5e9e7f60b85cc6f1b7662fe6e1903")
(setf (get sound_play::SoundRequestGoal :datatype-) "sound_play/SoundRequestGoal")
(setf (get sound_play::SoundRequestGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
SoundRequest sound_request

================================================================================
MSG: sound_play/SoundRequest
# IMPORTANT: You should never have to generate this message yourself.
# Use the sound_play::SoundClient C++ helper or the
# sound_play.libsoundplay.SoundClient Python helper.

# Sounds
int8 BACKINGUP = 1
int8 NEEDS_UNPLUGGING = 2
int8 NEEDS_PLUGGING = 3
int8 NEEDS_UNPLUGGING_BADLY = 4
int8 NEEDS_PLUGGING_BADLY = 5

# Sound identifiers that have special meaning
int8 ALL = -1 # Only legal with PLAY_STOP
int8 PLAY_FILE = -2
int8 SAY = -3

int8 sound # Selects which sound to play (see above)

# Commands
int8 PLAY_STOP = 0 # Stop this sound from playing
int8 PLAY_ONCE = 1 # Play the sound once
int8 PLAY_START = 2 # Play the sound in a loop until a stop request occurs

int8 command # Indicates what to do with the sound

# Volume at which to play the sound, with 0 as mute and 1.0 as 100%.
float32 volume

string arg # file name or text to say
string arg2 # other arguments

")



(provide :sound_play/SoundRequestGoal "3bd5e9e7f60b85cc6f1b7662fe6e1903")


